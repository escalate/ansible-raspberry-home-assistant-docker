[Unit]
Description=Home Assistant
After=docker.service
Requires=docker.service

[Service]
Type=simple
ExecStartPre=-/usr/bin/docker stop %N
ExecStartPre=-/usr/bin/docker rm %N
ExecStartPre=/usr/bin/docker pull homeassistant/home-assistant:{{ home_assistant_docker_image_version }}
ExecStart=/usr/bin/docker run \
--name %N \
--memory={{ home_assistant_docker_memory }} \
{% if home_assistant_env_vars | dict2items | length > 0 %}
--env-file=/etc/home-assistant.env \
{% endif %}
{% if home_assistant_docker_labels | dict2items | length > 0 %}
--label-file=/etc/home-assistant.label \
{% endif %}
--mount=type=bind,source={{ home_assistant_backup_path }},destination=/backup \
--mount=type=bind,source={{ home_assistant_data_path }},destination=/config \
--mount=type=bind,source={{ home_assistant_data_path }}/docker/run,destination=/etc/services.d/home-assistant/run \
--network={{ home_assistant_docker_network }} \
{% if home_assistant_docker_network not in ['bridge', 'host', 'none'] %}
--network-alias=home-assistant \
{% endif %}
{% if home_assistant_docker_publish_ports | length > 0 %}
{% for port in home_assistant_docker_publish_ports %}
--publish={{ port }} \
{% endfor %}
{% endif %}
homeassistant/home-assistant:{{ home_assistant_docker_image_version }}
ExecStop=/usr/bin/docker stop %N
SyslogIdentifier=%N
TimeoutStartSec=infinity
StartLimitInterval=30
StartLimitBurst=5
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
