- name: Create application user
  ansible.builtin.user:
    name: home-assistant
    uid: 10200
    group: root
    create_home: false
    shell: /sbin/nologin
    groups: "{{ home_assistant_additional_user_groups }}"

- name: Create data directory
  ansible.builtin.file:
    path: "{{ home_assistant_data_path }}"
    state: directory
    owner: home-assistant
    group: root
    mode: "0775"

- name: Create backup directory
  ansible.builtin.file:
    path: "{{ home_assistant_backup_path }}"
    state: directory
    owner: home-assistant
    group: root
    mode: "0775"

- name: Create service configuration
  ansible.builtin.template:
    src: configuration.yaml.j2
    dest: "{{ home_assistant_data_path }}/configuration.yaml"
    owner: root
    group: root
    mode: "0644"
  no_log: true
  notify: Restart home-assistant service

- name: Define environment variables
  ansible.builtin.template:
    src: home-assistant.env.j2
    dest: /etc/home-assistant.env
    owner: root
    group: root
    mode: "0644"
  notify: Restart home-assistant service

- name: Create Docker non-root start script
  ansible.builtin.git:
    repo: https://github.com/tribut/homeassistant-docker-venv.git
    dest: "{{ home_assistant_data_path }}/docker"
    version: master
  notify: Restart home-assistant service

- name: Create secrets configuration
  ansible.builtin.template:
    src: secrets.yaml.j2
    dest: "{{ home_assistant_data_path }}/secrets.yaml"
    owner: root
    group: root
    mode: "0644"
  no_log: true
  notify: Restart home-assistant service

- name: Define Docker container labels
  ansible.builtin.template:
    src: home-assistant.label.j2
    dest: /etc/home-assistant.label
    owner: root
    group: root
    mode: "0644"
  notify: Restart home-assistant service

- name: Pull Docker image
  community.docker.docker_image:
    name: "ghcr.io/home-assistant/home-assistant:{{ home_assistant_docker_image_version }}"
    source: pull

- name: Create systemd service
  ansible.builtin.template:
    src: home-assistant.service.j2
    dest: /etc/systemd/system/home-assistant.service
    owner: root
    group: root
    mode: "0644"
  notify: Restart home-assistant service

- name: Start service
  ansible.builtin.systemd:
    name: home-assistant
    state: started
    daemon_reload: true
  register: home_assistant_service_started

- name: Enable service
  ansible.builtin.systemd:
    name: home-assistant
    enabled: true
    daemon_reload: true

- name: Force all notified handlers to run at this point
  ansible.builtin.meta: flush_handlers

- name: Wait for service to become available
  ansible.builtin.uri:
    url: http://localhost:8123/api/
    status_code:
      - 401
  register: result
  until: result.status == 401
  retries: 60
  delay: 1

- name: Create backup script
  ansible.builtin.template:
    src: backup-home-assistant.sh.j2
    dest: /usr/local/bin/backup-home-assistant.sh
    owner: root
    group: root
    mode: "0755"

- name: Create restore script
  ansible.builtin.template:
    src: restore-home-assistant.sh.j2
    dest: /usr/local/bin/restore-home-assistant.sh
    owner: root
    group: root
    mode: "0755"

- name: Add backup cron job
  ansible.builtin.cron:
    name: Backup Home Assistant
    minute: "30"
    hour: "3"
    job: "/usr/local/bin/backup-home-assistant.sh || echo \"ERROR: A problem occurred during backup of Home Assistant. Please check the logfiles. journalctl -t backup-home-assistant.sh\""  # noqa 204
    user: root
